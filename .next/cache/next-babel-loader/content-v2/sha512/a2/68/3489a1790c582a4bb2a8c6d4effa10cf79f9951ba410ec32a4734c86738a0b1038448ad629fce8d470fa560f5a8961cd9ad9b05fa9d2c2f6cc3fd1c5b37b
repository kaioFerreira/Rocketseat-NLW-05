{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kaiofhs/\\xC1rea de Trabalho/Rocketseat-NLW-05/src/pages/episodes/[slug].tsx\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from 'next/router';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  _s();\n\n  var episode = _ref.episode;\n  var router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Episode, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/home/kaiofhs/√Årea de Trabalho/Rocketseat-NLW-05/src/pages/episodes/[slug].tsx"],"names":["useRouter","Episode","episode","router","title"],"mappings":";;;;;AAGA,SAASA,SAAT,QAA0B,aAA1B;;AAoBA,eAAe,SAASC,OAAT,OAA4C;AAAA;;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;AACzD,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AAEA,sBACE;AAAA,cAAKE,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;;GANuBH,O;UACPD,S;;;KADOC,O","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n}\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n  const router = useRouter();\n\n  return (\n    <h1>{episode.title}</h1>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url,\n  }\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24,\n  }\n}"]},"metadata":{},"sourceType":"module"}