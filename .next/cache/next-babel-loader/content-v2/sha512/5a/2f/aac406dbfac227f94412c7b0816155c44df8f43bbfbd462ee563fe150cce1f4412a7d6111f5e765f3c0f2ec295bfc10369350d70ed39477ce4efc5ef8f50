{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/kaiofhs/\\xC1rea de Trabalho/Rocketseat-NLW-05/src/contexts/PlayerContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nexport var PlayerContext = /*#__PURE__*/createContext({});\nexport function PlayerContexProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      episodeList = _useState[0],\n      setEpisodeList = _useState[1];\n\n  var _useState2 = useState(0),\n      currentEpisodeIndex = _useState2[0],\n      setCurrentEpisodeIndex = _useState2[1];\n\n  var _useState3 = useState(false),\n      isPlaying = _useState3[0],\n      setIsPlaying = _useState3[1];\n\n  function play(episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list, index) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state) {\n    setIsPlaying(state);\n  }\n\n  function playNext() {\n    var nextEpisodeIndex = currentEpisodeIndex + 1;\n\n    if (nextEpisodeIndex < episodeList.length) {\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n  }\n\n  function playPrevious() {\n    if (currentEpisodeIndex > 0) {\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PlayerContext.Provider, {\n    value: {\n      episodeList: episodeList,\n      currentEpisodeIndex: currentEpisodeIndex,\n      play: play,\n      playList: playList,\n      isPlaying: isPlaying,\n      togglePlay: togglePlay,\n      setPlayingState: setPlayingState\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlayerContexProvider, \"LrQXJ4YCuKXOoMsmvRtpeyylJ9U=\");\n\n_c = PlayerContexProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerContexProvider\");","map":{"version":3,"sources":["/home/kaiofhs/Área de Trabalho/Rocketseat-NLW-05/src/contexts/PlayerContext.tsx"],"names":["createContext","useState","PlayerContext","PlayerContexProvider","children","episodeList","setEpisodeList","currentEpisodeIndex","setCurrentEpisodeIndex","isPlaying","setIsPlaying","play","episode","playList","list","index","togglePlay","setPlayingState","state","playNext","nextEpisodeIndex","length","playPrevious"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AAoBA,OAAO,IAAMC,aAAa,gBAAGF,aAAa,CAAC,EAAD,CAAnC;AAMP,OAAO,SAASG,oBAAT,OAAwE;AAAA;;AAAA,MAAxCC,QAAwC,QAAxCA,QAAwC;;AAAA,kBAEvCH,QAAQ,CAAC,EAAD,CAF+B;AAAA,MAEtEI,WAFsE;AAAA,MAEzDC,cAFyD;;AAAA,mBAGvBL,QAAQ,CAAC,CAAD,CAHe;AAAA,MAGtEM,mBAHsE;AAAA,MAGjDC,sBAHiD;;AAAA,mBAI3CP,QAAQ,CAAC,KAAD,CAJmC;AAAA,MAItEQ,SAJsE;AAAA,MAI3DC,YAJ2D;;AAM7E,WAASC,IAAT,CAAcC,OAAd,EAAgC;AAC9BN,IAAAA,cAAc,CAAC,CAACM,OAAD,CAAD,CAAd;AACAJ,IAAAA,sBAAsB,CAAC,CAAD,CAAtB;AACAE,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASG,QAAT,CAAkBC,IAAlB,EAAmCC,KAAnC,EAAkD;AAChDT,IAAAA,cAAc,CAACQ,IAAD,CAAd;AACAN,IAAAA,sBAAsB,CAACO,KAAD,CAAtB;AACAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAASM,UAAT,GAAsB;AACpBN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASQ,eAAT,CAAyBC,KAAzB,EAAyC;AACvCR,IAAAA,YAAY,CAACQ,KAAD,CAAZ;AACD;;AAED,WAASC,QAAT,GAAoB;AAClB,QAAMC,gBAAgB,GAAGb,mBAAmB,GAAG,CAA/C;;AAEA,QAAIa,gBAAgB,GAAGf,WAAW,CAACgB,MAAnC,EAA2C;AACzCb,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;AACF;;AAED,WAASe,YAAT,GAAwB;AAEtB,QAAIf,mBAAmB,GAAG,CAA1B,EAA6B;AAC3BC,MAAAA,sBAAsB,CAACD,mBAAmB,GAAG,CAAvB,CAAtB;AACD;AACF;;AAED,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,WAAW,EAAXA,WADK;AAELE,MAAAA,mBAAmB,EAAnBA,mBAFK;AAGLI,MAAAA,IAAI,EAAJA,IAHK;AAILE,MAAAA,QAAQ,EAARA,QAJK;AAKLJ,MAAAA,SAAS,EAATA,SALK;AAMLO,MAAAA,UAAU,EAAVA,UANK;AAOLC,MAAAA,eAAe,EAAfA;AAPK,KADT;AAAA,cAWGb;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzDeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\n\ntype Episode = {\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  url: string;\n};\n\ntype PlayerContextData = {\n  episodeList: Episode[];\n  currentEpisodeIndex: number;\n  isPlaying: boolean;\n  play: (episode: Episode) => void;\n  playList: (list: Episode[], index: number) => void;\n  togglePlay: () => void;\n  setPlayingState: (state: boolean) => void;\n};\n\nexport const PlayerContext = createContext({} as PlayerContextData);\n\ntype PlayerContextProviderProps = {\n  children: ReactNode;\n}\n\nexport function PlayerContexProvider({ children }: PlayerContextProviderProps) {\n\n  const [episodeList, setEpisodeList] = useState([]);\n  const [currentEpisodeIndex, setCurrentEpisodeIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  function play(episode: Episode) {\n    setEpisodeList([episode]);\n    setCurrentEpisodeIndex(0);\n    setIsPlaying(true);\n  }\n\n  function playList(list: Episode[], index: number) {\n    setEpisodeList(list);\n    setCurrentEpisodeIndex(index);\n    setIsPlaying(true);\n  }\n\n  function togglePlay() {\n    setIsPlaying(!isPlaying);\n  }\n\n  function setPlayingState(state: boolean) {\n    setIsPlaying(state);\n  }\n\n  function playNext() {\n    const nextEpisodeIndex = currentEpisodeIndex + 1;\n\n    if (nextEpisodeIndex < episodeList.length) {\n      setCurrentEpisodeIndex(currentEpisodeIndex + 1);\n    }\n  }\n\n  function playPrevious() {\n\n    if (currentEpisodeIndex > 0) {\n      setCurrentEpisodeIndex(currentEpisodeIndex - 1);\n    }\n  }\n\n  return (\n    <PlayerContext.Provider\n      value={{\n        episodeList,\n        currentEpisodeIndex,\n        play,\n        playList,\n        isPlaying,\n        togglePlay,\n        setPlayingState\n      }}>\n\n      {children}\n\n    </PlayerContext.Provider>\n  )\n}"]},"metadata":{},"sourceType":"module"}