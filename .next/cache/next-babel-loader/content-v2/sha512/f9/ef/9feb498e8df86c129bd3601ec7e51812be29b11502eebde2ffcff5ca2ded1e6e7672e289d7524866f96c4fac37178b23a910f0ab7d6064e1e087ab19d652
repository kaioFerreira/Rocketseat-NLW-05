{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kaiofhs/\\xC1rea de Trabalho/Rocketseat-NLW-05/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: episode.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["/home/kaiofhs/√Årea de Trabalho/Rocketseat-NLW-05/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","useRouter","api","convertDurationToTimeString","Episode","episode","router","title","getStaticProps","ctx","slug","params","data","get","id","thumbnail","members","publishedAt","published_at","locale","durationAsString","Number","file","duration","description","url","props","revalidate"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,2BAAT,QAA4C,yCAA5C;AAkBA,eAAe,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA4C;AACzD,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,sBACE;AAAA,cAAKI,OAAO,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AAED,OAAO,MAAMC,cAA8B,GAAG,MAAOC,GAAP,IAAe;AAC3D,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAG,CAACE,MAArB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMV,GAAG,CAACW,GAAJ,CAAS,aAAYH,IAAK,EAA1B,CAAvB;AAEA,QAAML,OAAO,GAAG;AACdS,IAAAA,EAAE,EAAEF,IAAI,CAACE,EADK;AAEdP,IAAAA,KAAK,EAAEK,IAAI,CAACL,KAFE;AAGdQ,IAAAA,SAAS,EAAEH,IAAI,CAACG,SAHF;AAIdC,IAAAA,OAAO,EAAEJ,IAAI,CAACI,OAJA;AAKdC,IAAAA,WAAW,EAAEnB,MAAM,CAACC,QAAQ,CAACa,IAAI,CAACM,YAAN,CAAT,EAA8B,UAA9B,EAA0C;AAAEC,MAAAA,MAAM,EAAEnB;AAAV,KAA1C,CALL;AAMdoB,IAAAA,gBAAgB,EAAEjB,2BAA2B,CAACkB,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUC,QAAX,CAAP,CAN/B;AAOdA,IAAAA,QAAQ,EAAEF,MAAM,CAACT,IAAI,CAACU,IAAL,CAAUC,QAAX,CAPF;AAQdC,IAAAA,WAAW,EAAEZ,IAAI,CAACY,WARJ;AASdC,IAAAA,GAAG,EAAEb,IAAI,CAACU,IAAL,CAAUG;AATD,GAAhB;AAWA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLrB,MAAAA;AADK,KADF;AAILsB,IAAAA,UAAU,EAAE,KAAK,EAAL,GAAU;AAJjB,GAAP;AAMD,CAtBM","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { GetStaticProps } from 'next';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n}\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n  const router = useRouter();\n\n  return (\n    <h1>{episode.title}</h1>\n  )\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url,\n  }\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24,\n  }\n}"]},"metadata":{},"sourceType":"module"}