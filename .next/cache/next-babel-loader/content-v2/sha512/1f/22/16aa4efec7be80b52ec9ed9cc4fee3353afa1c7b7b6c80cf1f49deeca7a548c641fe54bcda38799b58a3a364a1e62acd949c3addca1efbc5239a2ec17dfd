{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kaiofhs/\\xC1rea de Trabalho/Rocketseat-NLW-05/src/pages/episodes/[slug].tsx\";\nimport { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport Image from 'next/image';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\nimport styles from './episode.module.scss';\nexport default function Episode({\n  episode\n}) {\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: 700,\n        height: 160,\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/play.svg\",\n          alt: \"Tocar epis\\xF3dio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.members\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: episode.publishedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: episode.durationAsString\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\nexport const getStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  };\n};\nexport const getStaticProps = async ctx => {\n  const {\n    slug\n  } = ctx.params;\n  const {\n    data\n  } = await api.get(`/episodes/${slug}`);\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', {\n      locale: ptBR\n    }),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url\n  };\n  return {\n    props: {\n      episode\n    },\n    revalidate: 60 * 60 * 24\n  };\n};","map":{"version":3,"sources":["/home/kaiofhs/Área de Trabalho/Rocketseat-NLW-05/src/pages/episodes/[slug].tsx"],"names":["format","parseISO","ptBR","Image","useRouter","api","convertDurationToTimeString","styles","Episode","episode","router","thumbnailContainer","thumbnail","title","members","publishedAt","durationAsString","getStaticPaths","paths","fallback","getStaticProps","ctx","slug","params","data","get","id","published_at","locale","Number","file","duration","description","url","props","revalidate"],"mappings":"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","sourcesContent":["import { format, parseISO } from 'date-fns';\nimport ptBR from 'date-fns/locale/pt-BR';\nimport { GetStaticPaths, GetStaticProps } from 'next';\nimport Image from 'next/image';\nimport { useRouter } from 'next/router';\nimport { api } from '../../services/api';\nimport { convertDurationToTimeString } from '../../utils/convertDurationToTimeString';\n\nimport styles from './episode.module.scss';\n\ntype Episode = {\n  id: string;\n  title: string;\n  members: string;\n  thumbnail: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n  description: string;\n}\n\ntype EpisodeProps = {\n  episode: Episode;\n}\n\nexport default function Episode({ episode }: EpisodeProps) {\n  const router = useRouter();\n\n  return (\n    <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n        <button type=\"button\">\n          <img src=\"/arrow-left.svg\" alt=\"Voltar\" />\n        </button>\n        <Image\n          width={700}\n          height={160}\n          src={episode.thumbnail}\n          objectFit=\"cover\"\n        />\n        <button type=\"button\">\n          <img src=\"/play.svg\" alt=\"Tocar episódio\" />\n        </button>\n      </div>\n\n      <header>\n        <h1>{episode.title}</h1>\n        <h1>{episode.members}</h1>\n        <h1>{episode.publishedAt}</h1>\n        <span>{episode.durationAsString}</span>\n      </header>\n    </div>\n  )\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  return {\n    paths: [],\n    fallback: 'blocking'\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async (ctx) => {\n  const { slug } = ctx.params;\n\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), 'd MMM yy', { locale: ptBR }),\n    durationAsString: convertDurationToTimeString(Number(data.file.duration)),\n    duration: Number(data.file.duration),\n    description: data.description,\n    url: data.file.url,\n  }\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24,\n  }\n}"]},"metadata":{},"sourceType":"module"}